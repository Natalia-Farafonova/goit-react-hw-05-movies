{"version":3,"file":"static/js/888.ad75dc7e.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/Reviews/Reviews.js","components/Cast/Cast.js","components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'd160e760f357a6e52726639f7245ecc9';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nconst getMovies = async () => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n  // console.log(responce.data.results);\r\n\r\n  const trendingMovies = responce.data.results.map(({ id, title }) => {\r\n    return { id, title };\r\n  });\r\n\r\n  //   console.log(trendingMovies);\r\n\r\n  return trendingMovies;\r\n};\r\n\r\nconst getMoviesById = async id => {\r\n  const responceId = await axios.get(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`,\r\n  );\r\n  //   console.log(responceId.data);\r\n\r\n  return responceId.data;\r\n};\r\n\r\nconst getMoviesReviews = async id => {\r\n  const responceReviews = await axios.get(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n  // console.log(responceReviews.data.results);\r\n  const reviewsMovies = responceReviews.data.results.map(\r\n    ({ author, content, id }) => {\r\n      return { author, content, id };\r\n    },\r\n  );\r\n  // console.log(reviewsMovies);\r\n  return reviewsMovies;\r\n};\r\n\r\nconst getMoviesCasts = async id => {\r\n  const responceCasts = await axios.get(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n\r\n  \r\n\r\n  return responceCasts.data;\r\n};\r\n\r\nconst getMoviesQuery = async query => {\r\n  const responceCasts = await axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`,\r\n  );\r\n  // console.log(responceCasts.data.results);\r\n  return responceCasts.data.results;\r\n};\r\n\r\nexport {\r\n  getMovies,\r\n  getMoviesById,\r\n  getMoviesReviews,\r\n  getMoviesCasts,\r\n  getMoviesQuery,\r\n};","import PropTypes from 'prop-types';\r\n\r\nconst Reviews = ({ moviesIdReview }) => {\r\n  return (\r\n    <>\r\n      {moviesIdReview.length === 0 ? (\r\n        <p>No reviews</p>\r\n      ) : (\r\n        moviesIdReview &&\r\n        moviesIdReview.map(review => (\r\n          <div key={review.id}>\r\n            <h3>{review.author}</h3>\r\n            <p>{review.content}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  moviesIdReview: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Reviews;","// import s from 'components/Navigation/MoviesPage.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cast = ({ moviesIdCast }) => {\r\n  return (\r\n    <>\r\n      <h3>Cast</h3>\r\n      {moviesIdCast &&\r\n        moviesIdCast.cast.map(cast => (\r\n          <div key={cast.id}>\r\n            {cast.profile_path === null ? (\r\n              <img\r\n                src={`https://demofree.sirv.com/nope-not-here.jpg?w=150`}\r\n                alt={cast.name}\r\n                width=\"150\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\r\n                alt={cast.name}\r\n                width=\"150\"\r\n              />\r\n            )}\r\n            {/* <img\r\n              src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\r\n              alt={cast.name}\r\n              width=\"150\"\r\n            /> */}\r\n            <p>{cast.name}</p>\r\n            <p>Character: {cast.character}</p>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  moviesIdCast: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Cast;","import {\r\n  useParams,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { getMoviesById, getMoviesReviews, getMoviesCasts } from '../Api/Api';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Reviews from '../Reviews/Reviews';\r\nimport Cast from '../Cast/Cast';\r\n\r\n// import s from 'components/Navigation/MoviesPage.module.css';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const match = useRouteMatch();\r\n  // console.log(match.url);\r\n\r\n  const [moviesIdInfo, setMoviesIdInfo] = useState(null);\r\n  const [moviesIdReview, setMoviesIdReview] = useState(null);\r\n  const [moviesIdCast, setMoviesIdCast] = useState(null);\r\n\r\n  const { moviesId } = useParams();\r\n  // console.log('moviesId',moviesId);\r\n\r\n  const routerState = useRef(null);\r\n  // console.log(routerState.current);\r\n\r\n  const history = useHistory();\r\n  // console.log('history', history);\r\n  const location = useLocation();\r\n  // console.log('location', location.state);\r\n\r\n  useEffect(() => {\r\n    if (!routerState.current) {\r\n      routerState.current = location.state;\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // setTimeout(() => console.log('router.cur', routerState.current), 40);\r\n\r\n  useEffect(() => {\r\n    getMoviesById(moviesId).then(setMoviesIdInfo);\r\n    getMoviesReviews(moviesId).then(setMoviesIdReview);\r\n    getMoviesCasts(moviesId).then(setMoviesIdCast);\r\n  }, [moviesId]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          const paramsPath = routerState.current.params.pathname;\r\n          const paramsSearch = routerState.current.params.search;\r\n\r\n          // console.log(`${paramsPath}${paramsSearch}`);\r\n          history.push(`${paramsPath}${paramsSearch}`);\r\n        }}\r\n      >\r\n        Назад\r\n      </button>\r\n\r\n      <h2>MovieDetailsPage</h2>\r\n      {moviesIdInfo && (\r\n        <>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${moviesIdInfo.poster_path}`}\r\n            alt={moviesIdInfo.title}\r\n            width=\"150\"\r\n          />\r\n          <h2>\r\n            {moviesIdInfo.title}({moviesIdInfo.release_date.slice(0, 4)})\r\n          </h2>\r\n          <h3>Overview:</h3>\r\n          <p>{moviesIdInfo.overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>{moviesIdInfo.genres.map(genre => genre.name + ' ')}</p>\r\n          <Link to={`${match.url}/cast`}>\r\n            <li>Cast</li>\r\n          </Link>\r\n          <Link to={`${match.url}/reviews`}>\r\n            <li>Reviews</li>\r\n          </Link>\r\n          <Route path={`${match.url}/cast`}>\r\n            {moviesIdCast && <Cast moviesIdCast={moviesIdCast} />}\r\n          </Route>\r\n          <Route path={`${match.url}/reviews`}>\r\n            {moviesIdReview && <Reviews moviesIdReview={moviesIdReview} />}\r\n          </Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;"],"names":["API_KEY","BASE_URL","getMovies","axios","responce","trendingMovies","data","results","map","id","title","getMoviesById","responceId","getMoviesReviews","responceReviews","reviewsMovies","author","content","getMoviesCasts","responceCasts","getMoviesQuery","query","moviesIdReview","length","review","moviesIdCast","cast","profile_path","src","alt","name","width","character","match","useRouteMatch","useState","moviesIdInfo","setMoviesIdInfo","setMoviesIdReview","setMoviesIdCast","moviesId","useParams","routerState","useRef","history","useHistory","location","useLocation","useEffect","current","state","then","onClick","paramsPath","params","pathname","paramsSearch","search","push","poster_path","release_date","slice","overview","genres","genre","to","url","path"],"sourceRoot":""}