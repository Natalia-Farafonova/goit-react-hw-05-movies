{"version":3,"file":"static/js/432.374fb2ae.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAW,gCAEXC,EAAS,mCAAG,sGACOC,IAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAF3B,cACVI,EADU,OAMVC,EAAiBD,EAASE,KAAKC,QAAQC,KAAI,YAC/C,MAAO,CAAEC,GADyD,EAAhBA,GACrCC,MADqD,EAAZA,UANxC,kBAYTL,GAZS,2CAAH,qDAeTM,EAAa,mCAAG,WAAMF,GAAN,uFACKN,IAAAA,IAAA,UACpBF,EADoB,kBACFQ,EADE,oBACYT,IAFjB,cACdY,EADc,yBAMbA,EAAWN,MANE,2CAAH,sDASbO,EAAgB,mCAAG,WAAMJ,GAAN,yFACON,IAAAA,IAAA,UACzBF,EADyB,kBACPQ,EADO,4BACeT,IAFtB,cACjBc,EADiB,OAKjBC,EAAgBD,EAAgBR,KAAKC,QAAQC,KACjD,YACE,MAAO,CAAEQ,OADkB,EAA1BA,OACgBC,QADU,EAAlBA,QACiBR,GADC,EAATA,OANC,kBAWhBM,GAXgB,2CAAH,sDAchBG,EAAc,mCAAG,WAAMT,GAAN,uFACON,IAAAA,IAAA,UACvBF,EADuB,kBACLQ,EADK,4BACiBT,IAFxB,cACfmB,EADe,yBAKdA,EAAcb,MALA,2CAAH,sDAQdc,EAAc,mCAAG,WAAMC,GAAN,uFACOlB,IAAAA,IAAA,UACvBF,EADuB,gCACSD,EADT,4DACoEqB,IAF3E,cACfF,EADe,yBAKdA,EAAcb,KAAKC,SALL,2CAAH,uD,2FCbpB,UAhCiB,WAEf,OAA4Be,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAOjB,OAJAC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,MAAY0B,KAAKJ,KAChB,KAGD,iCACE,2CACCD,GACCA,EAAOf,KAAI,SAAAqB,GAAK,OACd,yBAEE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAMpB,IAC1BuB,MAAO,CAAEC,OAAQR,IAHrB,SAMGI,EAAMnB,SARFmB,EAAMpB","sources":["components/Api/Api.js","components/HomePage/HomePage.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd160e760f357a6e52726639f7245ecc9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovies = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\n  );\n  // console.log(responce.data.results);\n\n  const trendingMovies = responce.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n\n  //   console.log(trendingMovies);\n\n  return trendingMovies;\n};\n\nconst getMoviesById = async id => {\n  const responceId = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`,\n  );\n  //   console.log(responceId.data);\n\n  return responceId.data;\n};\n\nconst getMoviesReviews = async id => {\n  const responceReviews = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`,\n  );\n  // console.log(responceReviews.data.results);\n  const reviewsMovies = responceReviews.data.results.map(\n    ({ author, content, id }) => {\n      return { author, content, id };\n    },\n  );\n  // console.log(reviewsMovies);\n  return reviewsMovies;\n};\n\nconst getMoviesCasts = async id => {\n  const responceCasts = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`,\n  );\n\n  return responceCasts.data;\n};\n\nconst getMoviesQuery = async query => {\n  const responceCasts = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`,\n  );\n  // console.log(responceCasts.data.results);\n  return responceCasts.data.results;\n};\n\nexport {\n  getMovies,\n  getMoviesById,\n  getMoviesReviews,\n  getMoviesCasts,\n  getMoviesQuery,\n};\n","import { getMovies } from '../Api/Api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\nconst HomePage = () => {\n  // const match = useRouteMatch();\n  const [movies, setMovies] = useState(null);\n  // console.log(match);\n  const location = useLocation();\n  // console.log(location);\n\n  useEffect(() => {\n    getMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <h2>Treading today</h2>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            {/* <Link to={`movies/${movie.id}`}>{movie.title}</Link> */}\n            <Link\n              to={{\n                pathname: `movies/${movie.id}`,\n                state: { params: location },\n              }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_KEY","BASE_URL","getMovies","axios","responce","trendingMovies","data","results","map","id","title","getMoviesById","responceId","getMoviesReviews","responceReviews","reviewsMovies","author","content","getMoviesCasts","responceCasts","getMoviesQuery","query","useState","movies","setMovies","location","useLocation","useEffect","then","movie","to","pathname","state","params"],"sourceRoot":""}